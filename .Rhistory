library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
showNonASCII(readLines(paste0(pkg, "/man/bmeasures-package.Rd.Rd")))
showNonASCII(readLines(paste0(bmeasures, "/man/bmeasures-package.Rd.Rd")))
tools::showNonASCII( readLines("/man/bmeasures-package.Rd"))
showNonASCII(readLines(paste0(pkg, "/man/bmeasures-package.Rd")))
showNonASCII(readLines(paste0(bmeasures, "/man/bmeasures-package.Rd")))
showNonASCII(readLines("/man/bmeasures-package.Rd"))
showNonASCII("/man/bmeasures-package.Rd")
check(bmeasures)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
check(bmeasures)
showNonASCII("/man/bmeasures-package.Rd")
temp <- showNonASCII("/man/bmeasures-package.Rd")
library(bmeasures)
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
otu <- bmeasures_otu(ob1, ob2)
otu
ob1
ob2
# Generates sample data
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
# Defined the quantities of the OTUs table
b_coeff <- bmeasures(ob1, ob2, method="eq_01")
b_coeff
library(bmeasures)
# Generates sample data
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
# Defined the quantities of the OTUs table
b_coeff <- bmeasures(ob1, ob2, method="eq_01")
b_coeff
library(bmeasures)
library(bmeasures)
# Generates sample data
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
# Defined the quantities of the OTUs table
b_coeff <- bmeasures(ob1, ob2, method="eq_01")
b_coeff
ob1
ob2
library(bmeasures)
# Generates sample data
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
# Defined the quantities of the OTUs table
b_coeff <- bmeasures(ob1, ob2, method="eq_01")
b_coeff
library(bmeasures)
remove.packages("bmeasures")
temp <- c(2,1,4,2)
temp
colnames(temp) <- c("a", "b", "c", "d")
temp <- as.matrix(temp)
temp
temp <- t(as.matrix(temp))
temp
colnames(temp) <- c("a", "b", "c", "d")
temp
library(bmeasures)
# Generates sample data
row <- 30
col <- 10
sample <- matrix(sample(0:1, row * col, replace = TRUE), row, col)
ob1 <- t(as.matrix(sample[1,]))
ob2 <- t(as.matrix(sample[2,]))
# Defined the quantities of the OTUs table
b_coeff <- bmeasures(ob1, ob2, method="eq_01")
b_coeff
# Binary coeffients between object samples
dsample <- dim(sample)
for (data1 in 1:(dsample[1]-1))
{
for(data2 in (data1+1):dsample[1])
{
obj1 <- t(as.matrix(sample[data1,]))
obj2 <- t(as.matrix(sample[data2,]))
cat(data1, " - ", data2, "\n")
cat(obj1,"\n")
cat(obj2,"\n")
result <- bmeasures(obj1, obj2, method="eq_01")
id <- paste(data1,"-",data2)
id <- gsub(" ","",id)
result <- c(id=id, result)
# binding the outputs
if ((data1==1) & (data2==(data1+1)))
{
output <- result
} else
{
output <- rbind(output, result)
}
}
}
View(output)
temp <- output
row.names(temp) <- NULL
View(temp)
remove.packages("bmeasures")
